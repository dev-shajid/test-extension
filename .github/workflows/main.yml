name: Build and Release Chrome Extension

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create ZIP file of the extension
        run: |
          zip -r outlier-earnings-masker.zip manifest.json content.js
          ls -la

      - name: Upload the artifact (ZIP)
        uses: actions/upload-artifact@v3
        with:
          name: outlier-earnings-masker
          path: outlier-earnings-masker.zip

  release:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: outlier-earnings-masker

      - name: List downloaded files
        run: |
          ls -la 

      - name: Get latest release tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [ -z "$latest_tag" ]; then
            new_version="v1.0.0"
          else
            latest_tag=$(echo $latest_tag | sed 's/^v//')
            IFS='.' read -r major minor patch <<< "$latest_tag"
            minor=${minor:-0}
            patch=${patch:-0}
            patch=$((patch + 1))
            new_version="v$major.$minor.$patch"
          fi
          echo "::set-output name=version::$new_version"

      - name: Debug Version
        run: 'echo "The version is: ${{ steps.get_tag.outputs.version }}"'

      - name: Create a GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.version }}
          release_name: ${{ steps.get_tag.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload the ZIP to the release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: outlier-earnings-masker.zip
          asset_name: outlier-earnings-masker-${{ steps.get_tag.outputs.version }}.zip
          asset_content_type: application/zip
